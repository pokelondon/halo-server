# Host names
server_name mediator.halo.pokedev.net;

# Logging
access_log  /poke/data/www/poke/halo/halo_stage/logs/nginx.access.log   combined;
error_log   /poke/data/www/poke/halo/halo_stage/logs/nginx.error.log    info;

# Password Protect
#auth_basic              "Restricted";
#auth_basic_user_file    /poke/data/www/poke/halo/halo_stage/src/src/halo/config/common/.htusers;

# Forward all request to backend
location / {
    set $server_key 'unknown';
    if ($hostname ~ ([^-]+).pokedev.net) { set $server_key $1; }

    proxy_pass              http://node_halo_stage;
    proxy_set_header        Host                    $http_host;
    proxy_set_header        X-Real-IP               $remote_addr;
    proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto       $scheme;
    client_max_body_size    500M;

    add_header              X-Handled-By            $server_key;
    add_header              Access-Control-Allow-Origin *;
    add_header              Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
}

# static files
location /s/ {
    autoindex   on;
    auth_basic  off;
    alias       /poke/data/www/poke/halo/halo_stage/src/src/public/;
    expires     0;
    add_header  Access-Control-Allow-Origin *;
    add_header  Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
}

# vim: set filetype=nginx:

